import React, { useContext, useState } from 'react';
import { Modal, Button } from 'react-bootstrap';
import { Link } from 'react-router-dom';
import { observer } from 'mobx-react-lite';

import ObjectTypeSelectionMenu from './ObjectTypeSelectionMenu.js';
import ScenarioSelectionMenu from './ScenarioSelectionMenu.js';
import { AppContext } from '../AppContext.js';
import basketAPI from '../../http/basketAPI.js';
import { quantityCalculators } from '../../calculators/quantityCalculators.js';
import { fetchVariantsByIds } from '../../http/catalogAPI.js';
import RegionSelectionMenu from './RegionsSelectionMenu.js';
import CalculationInfoShortList from './CalculationInfoShortList.js';

const StepByStepAutoCalc = observer(({ isShow, setIsShow }) => {
    const { EESCalculator, catalog } = useContext(AppContext);
    const [stepNumber, setStepNumber] = useState(1);
    const [isFetching, setIsFetching] = useState(false);

    const calculateEESProject = (scenario) => {
        if (!EESCalculator.isParamsValid) return;
        setIsFetching(true);

        const variantIds = scenario.variantIds;
        fetchVariantsByIds(variantIds)
            .then((data) => {
                const variantsListForBasket = data.map((item) => {
                    const quantity = item.quantityCalculatorName
                        ? quantityCalculators[item.quantityCalculatorName](
                              EESCalculator.quantityCalculatorParams
                          ).number
                        : item.defaultQuantity || 1;
                    return { id: item.id, quantity };
                });
                return variantsListForBasket;
            })
            .catch((error) => console.error(`Fetching variants error: ${error}`))
            .then((variantsListForBasket) => {
                return basketAPI.appendVariantsList({
                    ...EESCalculator.quantityCalculatorParams,
                    regionId: EESCalculator.regionId,
                    variants: variantsListForBasket,
                    calcData: EESCalculator.quantityCalculatorParams,
                });
            })
            .catch((error) =>
                console.error(`Appending in basket variants list error: ${error}`)
            )
            .then((data) => {
                catalog.calcData = data.calcData;
                catalog.projectVariants = data.basketVariants;
                catalog.regionId = data.regionId;
            })
            .then(() => (EESCalculator.curScenario = ''))
            .then(() => setIsFetching(false));
    };

    const handleHide = () => {
        setIsShow(false);
        EESCalculator.quantityCalculatorParams = catalog.calcData;
        EESCalculator.regionId = null;
        setStepNumber(1);
    };

    const getPrevStep = () => {
        setStepNumber((prevStep) => prevStep - 1);
    };

    const handleNextStep = () => {
        if (stepNumber === 2) {
            calculateEESProject([]);
        } else if (stepNumber === 3) {
            calculateEESProject(EESCalculator.curScenario);
        }
        if (!isFetching) {
            setStepNumber((prevStep) => prevStep + 1);
        }
    };

    const getContentByStepNumber = (stepNumber) => {
        switch (stepNumber) {
            case 1:
                return <RegionSelectionMenu isBigMenu={true} />;
            case 2:
                return <ObjectTypeSelectionMenu defaultTestingSitesNumberPerFiveHa={2} />;
            case 3:
                return <ScenarioSelectionMenu />;
            case 4:
                return (
                    <div>
                        <p className="fw-bold mb-1">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á—ë—Ç–∞ (–∫–æ—Ä–æ—Ç–∫–æ)</p>

                        <CalculationInfoShortList />

                        <p className="mt-3 mb-2">
                            –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω–æ–≥–æ –ø–µ—Ä–µ—á–Ω—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –∏ –∏—Ö –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–π,
                            —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è
                            –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã
                            –∏–∑—ã—Å–∫–∞–Ω–∏–π, —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–∞—Å—á—ë—Ç –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø—Ä–æ–µ–∫—Ç –∏–∑—ã—Å–∫–∞–Ω–∏–π.
                        </p>
                        <p className="mt-1">
                            –î–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ—Å—Ç–∞–≤–∞ —Ä–∞–±–æ—Ç –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä.
                        </p>
                        {/* <p>
                            –ù–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞—Å—á—ë—Ç–∞ –≤—ã –º–æ–∂–µ—Ç–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å
                            —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—Ä–æ—Å –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (–ö–ü),
                            –∑–∞–ø—Ä–æ—Å–∏—Ç—å –ö–ü –º–æ–∂–Ω–æ —É –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∞ —Å–∞–π—Ç–µ –ø–æ–¥—Ä—è–¥—á–∏–∫–æ–≤, –ª–∏–±–æ
                            –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∑–∞–ø—Ä–æ—Å –ö–ü –∏ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å –µ—ë –≤ –ª—é–±—É—é –∏–∑–≤–µ—Å—Ç–Ω—É—é
                            –≤–∞–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é.
                        </p>
                        <p>
                            –ú—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —É
                            –ø–æ–¥—Ä—è–¥—á–∏–∫–æ–≤, –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—â–∏—Ö –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —Ä–µ–≥–∏–æ–Ω–µ
                            —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è —É—á–∞—Å—Ç–∫–∞. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, –æ–Ω–∏ —Å–º–æ–≥—É—Ç
                            —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–∞–≤ —Ä–∞–±–æ—Ç —Å —É—á—ë—Ç–æ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –º–µ—Å—Ç–Ω–æ–π
                            —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã.
                        </p> */}
                    </div>
                );
            default:
                return null;
        }
    };

    const getButtonsByStepNumber = (stepNumber) => {
        switch (stepNumber) {
            case 1:
                return (
                    <>
                        <Button style={{ width: '7em' }} onClick={handleHide}>
                            –í—ã–π—Ç–∏{' '}
                        </Button>
                        <Button
                            style={{ width: '7em' }}
                            disabled={!EESCalculator.regionId && stepNumber === 1}
                            onClick={handleNextStep}
                        >
                            –í–ø–µ—Ä—ë–¥ ü†û
                        </Button>
                    </>
                );
            case 2:
                return (
                    <>
                        <Button style={{ width: '7em' }} onClick={getPrevStep}>
                            ü†ú –ù–∞–∑–∞–¥{' '}
                        </Button>
                        <Button
                            style={{ width: '7em' }}
                            disabled={!EESCalculator.isParamsValid}
                            onClick={handleNextStep}
                        >
                            –í–ø–µ—Ä—ë–¥ ü†û
                        </Button>
                    </>
                );
            case 3:
                return (
                    <>
                        <Button style={{ width: '7em' }} onClick={getPrevStep}>
                            ü†ú –ù–∞–∑–∞–¥{' '}
                        </Button>
                        <Button
                            style={{ width: '7em' }}
                            disabled={!EESCalculator.curScenario.id}
                            onClick={handleNextStep}
                        >
                            –í–ø–µ—Ä—ë–¥ ü†û
                        </Button>
                    </>
                );
            case 4:
                return (
                    <>
                        <Link
                            to="/project"
                            className="btn btn-primary"
                            onClick={() => {
                                EESCalculator.clearParams();
                                EESCalculator.regionId = null;
                            }}
                        >
                            –í –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
                        </Link>
                        <Link
                            to="/project"
                            className="btn btn-primary"
                            onClick={() => {
                                EESCalculator.clearParams();
                                EESCalculator.regionId = null;
                            }}
                        >
                            –í –ø—Ä–æ–µ–∫—Ç –∏–∑—ã—Å–∫–∞–Ω–∏–π
                        </Link>
                    </>
                );
            default:
                return null;
        }
    };

    return (
        <Modal
            show={isShow}
            onHide={handleHide}
            size="lg"
            fullscreen="lg-down"
            backdrop="static"
            keyboard={false}
            scrollable={true}
        >
            <Modal.Header closeButton>
                <Modal.Title>
                    {stepNumber !== 4 ? (
                        <>–†–∞—Å—á—ë—Ç —Å–æ—Å—Ç–∞–≤–∞ –∏–∑—ã—Å–∫–∞–Ω–∏–π (—à–∞–≥ {stepNumber} –∏–∑ 3)</>
                    ) : (
                        <>–†–∞—Å—á—ë—Ç –∑–∞–≤–µ—Ä—à—ë–Ω</>
                    )}
                </Modal.Title>
            </Modal.Header>

            <Modal.Body>{getContentByStepNumber(stepNumber)}</Modal.Body>

            <Modal.Footer
            // className={
            //     stepNumber === 4
            //         ? 'd-flex justify-content-center'
            //         : 'd-flex justify-content-between'
            // }
            >
                {getButtonsByStepNumber(stepNumber)}
            </Modal.Footer>
        </Modal>
    );
});

export default StepByStepAutoCalc;
